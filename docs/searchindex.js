Search.setIndex({docnames:["export_best_model","find_best_clf","finetune_best_clf","geocoding_feature_extraction","index"],envversion:{"sphinx.domains.c":1,"sphinx.domains.changeset":1,"sphinx.domains.cpp":1,"sphinx.domains.javascript":1,"sphinx.domains.math":2,"sphinx.domains.python":1,"sphinx.domains.rst":1,"sphinx.domains.std":1,"sphinx.ext.intersphinx":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["export_best_model.rst","find_best_clf.rst","finetune_best_clf.rst","geocoding_feature_extraction.rst","index.rst"],objects:{"":{export_best_model:[0,0,0,"-"],find_best_clf:[1,0,0,"-"],finetune_best_clf:[2,0,0,"-"],geocoding_feature_extraction:[3,0,0,"-"]},export_best_model:{train_clf_given_hyperparams:[0,1,1,""],tuned_parameters_5_fold:[0,1,1,""]},find_best_clf:{fine_tune_parameters_given_clf:[1,1,1,""],get_scores:[1,1,1,""],tuned_parameters_5_fold:[1,1,1,""]},finetune_best_clf:{fine_tune_parameters_given_clf:[2,1,1,""],get_scores:[2,1,1,""],tuned_parameters_5_fold:[2,1,1,""]},geocoding_feature_extraction:{get_X_Y_data:[3,1,1,""],standardize_data_test:[3,1,1,""],standardize_data_train:[3,1,1,""]}},objnames:{"0":["py","module","Python module"],"1":["py","function","Python function"]},objtypes:{"0":"py:module","1":"py:function"},terms:{"case":4,"class":[1,2],"default":4,"export":[0,4],"final":4,"float":[1,2],"function":[0,1,2,3,4],"return":[0,1,2,3],"while":4,Its:4,The:4,accur:4,accuraci:[1,2],accuracy_scor:[1,2],achiev:3,algorithm:4,all:[3,4],alreadi:4,alter:4,annot:4,approach:[1,2],arg:[0,1,2],argpars:4,argument:[0,1,2,4],arrai:[0,1,2,3],assess:4,avail:4,averag:[1,2,4],base:4,being:4,best:4,best_clf_:4,best_clf_file_nam:4,best_hyperparameter_file_nam:4,best_hyperparameters_:4,between:4,can:[1,2,3,4],candid:4,categori:4,chosen:4,classif:4,classifi:[0,1,2,4],classification_report_:4,clf:[0,1,2],clf_name:[1,2],collect:[1,2,4],column:4,common:2,compar:4,comparison:[1,2,4],comput:[1,2],configur:4,consist:4,contain:[0,1,2,4],content:4,coordin:4,correspond:4,correspondingli:4,creat:3,cross:[1,2,4],csv:4,data:[3,4],dataset:[3,4],desir:4,dictionari:[0,1,2],differ:4,directori:4,dset:4,dure:[1,2],each:4,encapsul:4,entir:4,evalu:4,everi:4,exactli:4,except:4,execut:4,exhaust:4,experi:3,export_best_model:4,export_predict:4,f1_score:[1,2],featur:[0,1,2,3,4],file:4,find:4,find_best_clf:4,fine_tune_parameters_given_clf:[1,2],finetune_best_clf:4,first:4,fit:[0,1,2,4],fold:[1,2,4],follow:4,full:4,further:4,futur:[3,4],geocoding_feature_extract:4,geocoding_file_nam:4,geopanda:4,geospaci:4,get_scor:[1,2],get_x_y_data:3,given:4,grid:4,hand:4,handl:4,have:4,http:4,hyperparamet:4,hyperparameter_file_nam:4,hyperparameters_per_fold_:4,ideal:4,implement:4,index:4,inform:4,interact:4,iter:4,its:4,label:[0,1,2,3,4],last:4,later:[0,1,2],latest:4,learn:[0,1,2,4],least:4,level:4,librari:4,list:2,machin:4,macro:[1,2],made:[1,2],map:4,matplotlib:4,measur:[1,2],metric:4,minmaxscal:3,model:[0,4],modul:4,more:4,most:[2,4],most_common_class:2,must:4,name:[1,4],need:[0,1,2],neighbor:4,nest:[1,2,4],none:[0,1,2,3],novel:4,numpi:[0,1,2,3,4],object:[0,1,2,3],option:4,order:4,org:4,osmnx:4,our:3,output:[1,2,4],output_csv:4,page:4,pair:4,panda:4,paramet:[0,1,2,3,4],parameter:4,per:4,perform:4,phase:[1,2],pickl:4,pkl:4,poi:4,point:4,pois_csv_nam:4,popul:2,predict:[1,2,4],predictions_:4,prefix:4,preprocess:3,previous:[3,4],probabl:4,produc:4,provid:4,psycopg2:4,purpos:[0,1,2,4],python:4,refer:4,regard:4,relev:[1,2,3],respons:[0,1,2,3],result:[1,2,4],results_file_nam:4,road:4,run:3,scaler:3,scheme:4,scikit:[0,1,2,4],score:[1,2],search:4,select:4,seri:4,set:[0,1,2,3,4],sever:[0,1,2,4],shape:4,six:4,sklearn:[3,4],sourc:[0,1,2,3,4],space:4,specif:4,standar:3,standard:3,standard_scal:3,standardize_data_test:3,standardize_data_train:3,step:4,store:4,str:1,test:[1,2,3],them:4,thi:[0,1,2,3,4],three:4,timestamp:4,toolkit:4,total_featur:3,train:[0,1,2,3,4],train_clf_given_hyperparam:0,trained_model_:4,trained_model_file_nam:4,tune:4,tuned_parameters_5_fold:[0,1,2],two:4,type:[0,1,2,3],ultim:3,unseen:4,usag:4,use:[0,1,2],used:[1,2,3,4],user:4,using:[1,2,3],valid:[1,2,4],valu:4,vector:3,want:3,weight:[1,2],were:4,where:4,which:4,within:3,work:4,workflow:4,x_test:[1,2],x_train:[0,1,2],y_pred:[1,2],y_test:[1,2],y_train:[0,1,2],you:4},titles:["export_best_model","find_best_clf","finetune_best_clf","geocoding_feature_extraction","Welcome to LGM-Geocoding\u2019s documentation!"],titleterms:{about:4,document:4,export_best_model:0,find_best_clf:1,finetune_best_clf:2,geocod:4,geocoding_feature_extract:3,indic:4,lgm:4,tabl:4,welcom:4}})